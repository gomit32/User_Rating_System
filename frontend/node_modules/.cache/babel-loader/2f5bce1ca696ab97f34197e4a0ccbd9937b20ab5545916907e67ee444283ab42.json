{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\acer\\\\fstack_project\\\\frontend\\\\src\\\\pages\\\\RegisterPage.js\",\n  _s = $RefreshSig$();\n// src/pages/RegisterPage.js\n\nimport React, { useState, useEffect } from 'react';\nimport axiosInstance from '../api/axiosInstance';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RegisterPage = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    address: '',\n    password: ''\n  });\n  const [errors, setErrors] = useState({}); // State to store validation errors\n  const [isButtonDisabled, setIsButtonDisabled] = useState(true); // State for button disabled status\n  const navigate = useNavigate();\n\n  // Effect to re-validate form and update button status whenever formData changes\n  useEffect(() => {\n    const validate = () => {\n      let currentErrors = {};\n      // Name: Min 20, Max 60 characters\n      if (formData.name.length < 20 || formData.name.length > 60) {\n        currentErrors.name = 'Name must be between 20 and 60 characters.';\n      }\n      // Address: Max 400 characters\n      if (formData.address.length > 400) {\n        currentErrors.address = 'Address cannot exceed 400 characters.';\n      }\n      // Password: 8-16 characters, 1 uppercase, 1 special character\n      const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.{8,16})/;\n      if (!passwordRegex.test(formData.password)) {\n        currentErrors.password = 'Password must be 8-16 chars, 1 uppercase, 1 special.';\n      }\n      // Basic email validation\n      const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(formData.email)) {\n        currentErrors.email = 'Please enter a valid email address.';\n      }\n      setErrors(currentErrors);\n      // Button is enabled only if there are no errors AND all fields are non-empty\n      setIsButtonDisabled(Object.keys(currentErrors).length > 0 || !formData.name || !formData.email || !formData.address || !formData.password);\n    };\n    validate();\n  }, [formData]); // Re-run validation when formData changes\n\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    // Re-validate just before submission to catch any last-minute issues\n    if (Object.keys(errors).length > 0 || isButtonDisabled) {\n      alert('Please correct the form errors before submitting.'); // Fallback alert\n      return;\n    }\n    try {\n      const response = await axiosInstance.post('/register', formData);\n      console.log(response.data);\n      alert('Registration successful!');\n      navigate('/login');\n    } catch (error) {\n      console.error(error.response.data);\n      alert(error.response.data.message || 'Registration failed. Please try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Register\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"name\",\n        children: \"Name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        placeholder: \"Name\",\n        value: formData.name,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }, this), errors.name && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 33\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"email\",\n        children: \"Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"Email\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors.email\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"address\",\n        children: \"Address\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"address\",\n        name: \"address\",\n        placeholder: \"Address\",\n        value: formData.address,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this), errors.address && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors.address\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"password\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"Password\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: errors.password\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isButtonDisabled,\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Already have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        className: \"link\",\n        children: \"Login here\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(RegisterPage, \"qgQv4+L6Bf27ljCOCqVUN8kX2WA=\", false, function () {\n  return [useNavigate];\n});\n_c = RegisterPage;\nexport default RegisterPage;\nvar _c;\n$RefreshReg$(_c, \"RegisterPage\");","map":{"version":3,"names":["React","useState","useEffect","axiosInstance","useNavigate","Link","jsxDEV","_jsxDEV","RegisterPage","_s","formData","setFormData","name","email","address","password","errors","setErrors","isButtonDisabled","setIsButtonDisabled","navigate","validate","currentErrors","length","passwordRegex","test","emailRegex","Object","keys","handleChange","e","target","value","handleSubmit","preventDefault","alert","response","post","console","log","data","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","onChange","required","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/acer/fstack_project/frontend/src/pages/RegisterPage.js"],"sourcesContent":["// src/pages/RegisterPage.js\r\n\r\nimport React, { useState, useEffect } from 'react';\r\nimport axiosInstance from '../api/axiosInstance';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst RegisterPage = () => {\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        address: '',\r\n        password: ''\r\n    });\r\n    const [errors, setErrors] = useState({}); // State to store validation errors\r\n    const [isButtonDisabled, setIsButtonDisabled] = useState(true); // State for button disabled status\r\n    const navigate = useNavigate();\r\n\r\n    // Effect to re-validate form and update button status whenever formData changes\r\n    useEffect(() => {\r\n        const validate = () => {\r\n            let currentErrors = {};\r\n            // Name: Min 20, Max 60 characters\r\n            if (formData.name.length < 20 || formData.name.length > 60) {\r\n                currentErrors.name = 'Name must be between 20 and 60 characters.';\r\n            }\r\n            // Address: Max 400 characters\r\n            if (formData.address.length > 400) {\r\n                currentErrors.address = 'Address cannot exceed 400 characters.';\r\n            }\r\n            // Password: 8-16 characters, 1 uppercase, 1 special character\r\n            const passwordRegex = /^(?=.*[A-Z])(?=.*[!@#$%^&*])(?=.{8,16})/;\r\n            if (!passwordRegex.test(formData.password)) {\r\n                currentErrors.password = 'Password must be 8-16 chars, 1 uppercase, 1 special.';\r\n            }\r\n            // Basic email validation\r\n            const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n            if (!emailRegex.test(formData.email)) {\r\n                currentErrors.email = 'Please enter a valid email address.';\r\n            }\r\n\r\n            setErrors(currentErrors);\r\n            // Button is enabled only if there are no errors AND all fields are non-empty\r\n            setIsButtonDisabled(\r\n                Object.keys(currentErrors).length > 0 ||\r\n                !formData.name || !formData.email || !formData.address || !formData.password\r\n            );\r\n        };\r\n        validate();\r\n    }, [formData]); // Re-run validation when formData changes\r\n\r\n    const handleChange = (e) => {\r\n        setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        // Re-validate just before submission to catch any last-minute issues\r\n        if (Object.keys(errors).length > 0 || isButtonDisabled) {\r\n            alert('Please correct the form errors before submitting.'); // Fallback alert\r\n            return;\r\n        }\r\n        try {\r\n            const response = await axiosInstance.post('/register', formData);\r\n            console.log(response.data);\r\n            alert('Registration successful!');\r\n            navigate('/login');\r\n        } catch (error) {\r\n            console.error(error.response.data);\r\n            alert(error.response.data.message || 'Registration failed. Please try again.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <h2>Register</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <input type=\"text\" id=\"name\" name=\"name\" placeholder=\"Name\" value={formData.name} onChange={handleChange} required />\r\n                {errors.name && <p className=\"error-message\">{errors.name}</p>}\r\n\r\n                <label htmlFor=\"email\">Email</label>\r\n                <input type=\"email\" id=\"email\" name=\"email\" placeholder=\"Email\" value={formData.email} onChange={handleChange} required />\r\n                {errors.email && <p className=\"error-message\">{errors.email}</p>}\r\n\r\n                <label htmlFor=\"address\">Address</label>\r\n                <input type=\"text\" id=\"address\" name=\"address\" placeholder=\"Address\" value={formData.address} onChange={handleChange} required />\r\n                {errors.address && <p className=\"error-message\">{errors.address}</p>}\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" id=\"password\" name=\"password\" placeholder=\"Password\" value={formData.password} onChange={handleChange} required />\r\n                {errors.password && <p className=\"error-message\">{errors.password}</p>}\r\n\r\n                <button type=\"submit\" disabled={isButtonDisabled}>Register</button>\r\n            </form>\r\n            <p>Already have an account? <Link to=\"/login\" className=\"link\">Login here</Link></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RegisterPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}